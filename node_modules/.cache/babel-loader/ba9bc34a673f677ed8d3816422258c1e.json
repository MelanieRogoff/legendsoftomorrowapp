{"ast":null,"code":"var _jsxFileName = \"/Users/melanierogoff/Desktop/legendsapp/src/components/Tables/Tablerender.js\";\nimport React from 'react';\nimport Table from \"./Table.js\";\n\nfunction Tablerender(props) {\n  return /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"firstCol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"ID \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"Name \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"Title \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, \"Department \"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"Salary \")), props.Users.map((user, index) =>\n  /*#__PURE__*/\n  //By putting dynamic code here, our code KNOWS to reference Table.js (because we're calling Table on the following line) and then we put our dynamic code that references Users.json/our function param BELOW so that everyting gets changed properly. \n  React.createElement(Table //Triggering Table setup in Table.js -- THIS USES TABLE\n  , {\n    key: index //making the key the user.id as it's unique\n    ,\n    id: user.id,\n    name: user.name,\n    title: user.title,\n    department: user.department,\n    salary: user.salary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default Tablerender;","map":{"version":3,"sources":["/Users/melanierogoff/Desktop/legendsapp/src/components/Tables/Tablerender.js"],"names":["React","Table","Tablerender","props","Users","map","user","index","id","name","title","department","salary"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,sBAEA;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALJ,CADJ,EASKA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAiB,CAACC,IAAD,EAAOC,KAAP;AAAA;AAAmB;AACrC,sBAAC,KAAD,CAAQ;AAAR;AACI,IAAA,GAAG,EAAIA,KADX,CACkB;AADlB;AAEI,IAAA,EAAE,EAAED,IAAI,CAACE,EAFb;AAGI,IAAA,IAAI,EAAEF,IAAI,CAACG,IAHf;AAII,IAAA,KAAK,EAAEH,IAAI,CAACI,KAJhB;AAKI,IAAA,UAAU,EAAEJ,IAAI,CAACK,UALrB;AAMI,IAAA,MAAM,EAAEL,IAAI,CAACM,MANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,CATL,CADA,CAFA;AAyBC;;AACD,eAAeV,WAAf","sourcesContent":["import React from 'react';\nimport Table from \"./Table.js\";\n\nfunction Tablerender(props) {\n    return (\n  \n    <table className=\"table table-dark\"> \n    <thead> \n        <tr>\n            <th className=\"firstCol\">ID </th>\n            <th>Name </th>\n            <th>Title </th>\n            <th>Department </th>\n            <th>Salary </th>\n        </tr>\n\n        {props.Users.map ((user, index) => ( //By putting dynamic code here, our code KNOWS to reference Table.js (because we're calling Table on the following line) and then we put our dynamic code that references Users.json/our function param BELOW so that everyting gets changed properly. \n        <Table  //Triggering Table setup in Table.js -- THIS USES TABLE\n            key = {index} //making the key the user.id as it's unique\n            id={user.id}\n            name={user.name}\n            title={user.title}\n            department={user.department}\n            salary={user.salary}\n            />\n    ))}\n    </thead>\n    </table>\n    )\n    }\n    export default Tablerender;"]},"metadata":{},"sourceType":"module"}